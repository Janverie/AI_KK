/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package AI_KK;

import java.awt.*;
import java.util.*;
import javax.swing.*;



/**
 *
 * @author krzy
 */
public class AI_KK_GUI extends javax.swing.JFrame {

    MP panel;
    int[][] Plansza;
    int Rozmiar=10;
    boolean PierwszyRuch = true;
    Wezel NajWez = new Wezel();
    ArrayList<Wezel> Wezly = new ArrayList();
    boolean button = true;
    
    /**
     * Creates new form AI_KK_GUI
     */
    public AI_KK_GUI() {
        initComponents();
        jP1.setLayout(new BorderLayout());
        Plansza = new int[Rozmiar][Rozmiar];
        panel = new MP(Rozmiar);
        panel.setSize(jP1.getWidth(), jP1.getHeight());
        jP1.add(panel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbg = new javax.swing.ButtonGroup();
        jP1 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        cb_tryb = new javax.swing.JCheckBox();
        b_ruch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        rb_komp = new javax.swing.JRadioButton();
        rb_user = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jP1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jP1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jP1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jP1Layout = new javax.swing.GroupLayout(jP1);
        jP1.setLayout(jP1Layout);
        jP1Layout.setHorizontalGroup(
            jP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 479, Short.MAX_VALUE)
        );
        jP1Layout.setVerticalGroup(
            jP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
        );

        getContentPane().add(jP1, java.awt.BorderLayout.CENTER);

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        cb_tryb.setSelected(true);
        cb_tryb.setText("Trybkrokowy");

        b_ruch.setText("Wykonaj ruch");
        b_ruch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_ruchActionPerformed(evt);
            }
        });

        jLabel1.setText("Pierwszy ruch");

        rbg.add(rb_komp);
        rb_komp.setText("Komputer");

        rbg.add(rb_user);
        rb_user.setSelected(true);
        rb_user.setText("Cz≈Çowiek");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(b_ruch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cb_tryb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(51, 51, 51)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rb_user, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(44, Short.MAX_VALUE))
                    .addComponent(rb_komp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_tryb)
                            .addComponent(rb_komp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_ruch)
                            .addComponent(rb_user))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_ruchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_ruchActionPerformed
        if (button == true && rb_komp.isSelected()){
        if(!cb_tryb.isSelected()) return;
        ruchKomputera();
        button = false;
        }
    }//GEN-LAST:event_b_ruchActionPerformed

    private void jP1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jP1MouseClicked
        if(PierwszyRuch && rb_komp.isSelected()) return;
        int w = jP1.getWidth()/Rozmiar;
        int h = jP1.getHeight()/Rozmiar;
        boolean flaga=true;
        if(Plansza[(int)Math.floor((1.0*evt.getY())/h)][(int)Math.floor(evt.getX()/(1.0*w))] == 1) {
            flaga=false;
        }
        if(Plansza[(int)Math.floor((1.0*evt.getY())/h)][(int)Math.floor(evt.getX()/(1.0*w))] == 0 && flaga == false ) {
            flaga=true;
        }
        if( Plansza[(int)Math.floor((1.0*evt.getY())/h)][(int)Math.floor(evt.getX()/(1.0*w))] == 0 && flaga == true ){
           Plansza[(int)Math.floor((1.0*evt.getY())/h)][(int)Math.floor(evt.getX()/(1.0*w))] = 1;
                   ruchKomputera();}
       
        panel.uaktualnijObraz(Plansza);
        panel.repaint();
        if(!cb_tryb.isSelected()) ruchKomputera();
        
    }//GEN-LAST:event_jP1MouseClicked
    
    
    private void ruchKomputera(){
           for(int e=0; e<Rozmiar; e++){
            for(int f=0; f<Rozmiar; f++)
            {
             if(f<7) if(Plansza[e][f]==1 && Plansza[e][f+1]==1 && Plansza[e][f+2]==1 && Plansza[e][f+3]==1)  {jLabel1.setText("Wygrana gracza!!"); JOptionPane.showMessageDialog(null, "You won!");}
             if(e<7) if(Plansza[e][f]==1 && Plansza[e+1][f]==1 && Plansza[e+2][f]==1 && Plansza[e+3][f]==1)  {jLabel1.setText("Wygrana gracza!!"); JOptionPane.showMessageDialog(null, "You won!");}
             if(f<7) if(Plansza[e][f]==2 && Plansza[e][f+1]==2 && Plansza[e][f+2]==2 && Plansza[e][f+3]==2)  {jLabel1.setText("Wygrana komputera !!"); JOptionPane.showMessageDialog(null, "Game over!");}
             if(e<7) if(Plansza[e][f]==2 && Plansza[e+1][f]==2 && Plansza[e+2][f]==2 && Plansza[e+3][f]==2)  {jLabel1.setText("Wygrana komputera !!"); JOptionPane.showMessageDialog(null, "Game over!");}
                   
            }
        }
        
          
        
        if(PierwszyRuch && rb_komp.isSelected()){
            PierwszyRuch = false;
            int i = 1 + (int)((Rozmiar-2)*Math.random());
            int j = 1 + (int)((Rozmiar-2)*Math.random());
            Plansza[i][j] = 2;
            panel.uaktualnijObraz(Plansza);
            panel.repaint();
            return;
        }
        Point Punkt = new Point();
        ArrayList<Integer> Wartosci = new ArrayList();
  
        int Score=0;

        //ATAK
        if (rb_komp.isSelected()){
           for(int i=0; i<Rozmiar; i++) {
            for(int j=0; j<Rozmiar; j++){
                
                if ( (j<7 && 
                        ( Plansza[i][j]==0&&   Plansza[i][j+1]==1 && Plansza[i][j+2]==1 && Plansza[i][j+3]==1)) || //_###
                     (i<7 &&
                        (Plansza[i][j]==0 && Plansza[i+1][j]==1 && Plansza[i+2][j]==1 && Plansza[i+3][j]==1)) ||
                        
                     (j<7 &&  
                        (Plansza[i][j]==1 && Plansza[i][j+1]==1 && Plansza[i][j+2]==1 && Plansza[i][j+3]==0)) || //###_   
                     (i<7 &&
                        (Plansza[i][j]==1 && Plansza[i+1][j]==1 && Plansza[i+2][j]==1 && Plansza[i+3][j]==0)) || 
                        
                        
                     (j<7 && 
                        (Plansza[i][j]==1 && Plansza[i][j+1]==0 && Plansza[i][j+2]==1 && Plansza[i][j+3]==1)) || //#_##
                        
                     (i<7 &&
                        (Plansza[i][j]==1 && Plansza[i+1][j]==0 && Plansza[i+2][j]==1 && Plansza[i+3][j]==1)) ||    

                     (j<7 && 
                        (Plansza[i][j]==1 && Plansza[i][j+1]==1 && Plansza[i][j+2]==0 && Plansza[i][j+3]==1)) || //##_#
                        
                     (i<7 &&
                        (Plansza[i][j]==1 && Plansza[i+1][j]==1 && Plansza[i+2][j]==0 && Plansza[i+3][j]==1)))
                {
                          if(Plansza[i][j]==0){
                   // Plansza[i][j]=2;
                    
                    for(int a=0; a<Rozmiar; a++){
                        for(int b=0; b<Rozmiar; b++){
                            if(Plansza[a][b]==0){
                   //             Plansza[a][b]=1;
                                
                              
                                if(a-1>=0&&Plansza[a-1][b]==0){
                                    Score++;
                                    if(a-2>=0&&Plansza[a-2][b]==0){
                                        Score+=2;}}
                                
                                if(b-1>=0 && Plansza[a][b-1]==0){
                                    Score++;
                                    if(b-2>=0 && Plansza[a][b-2]==0){
                                        Score+=2;}}
                                
                                if(a+1<=Rozmiar-1 && Plansza[a+1][b]==0){
                                    Score++;
                                    if(b+2<=Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}}
                        
                                if(b+1<=Rozmiar-1 && Plansza[a][b+1]==0){
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}
                                    Score++;}
                                                                
                                if(a-1>=0&&Plansza[a-1][b]==1){
                                    Score+=5;
                                    if(a-2>=0&&Plansza[a-2][b]==0){
                                        Score+=2;}}
                                
                                if(b-1>=0 && Plansza[a][b-1]==1){
                                    Score+=5;
                                    if(b-2>=0 && Plansza[a][b-2]==0){
                                        Score+=2;}}
                                
                                if(a+1<=Rozmiar-1 && Plansza[a+1][b]==1){
                                    Score+=5;
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}}
                        
                                if(b+1<=Rozmiar-1 && Plansza[a][b+1]==1){
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}
                                    Score+=5;}
                                
                                if(i-1>=0 && Plansza[i-1][j]==1){
                                    Score-=6;
                                    if(i-2>=0 && Plansza[i-2][j]==1){
                                        if(i-3>=0 && Plansza[i-3][j]==1){
                                            Score-=15;}
                                        Score-=16;}}
                                
                                if(j-1>=0 && Plansza[i][j-1]==1){
                                    if(j-2>=0 && Plansza[i][j-2]==1){
                                        if(j-3>=0 && Plansza[i][j-3]==1){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                
                                if(i+1<=Rozmiar-1 && Plansza[i+1][j]==1){
                                    if(i+2<=Rozmiar-1 && Plansza[i+2][j]==1){
                                        if(i+3<=Rozmiar-1 && Plansza[i+3][j]==1){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                 
                                if(j+1<=Rozmiar-1 && Plansza[i][j+1]==1){
                                    if(j+2<=Rozmiar-1 && Plansza[i][j+2]==1){
                                        if(j+3<=Rozmiar-1 && Plansza[i][j+3]==1){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                
                                if(j-1>=0 && Plansza[i][j-1]==1){
                                    if(j-2>=0 && Plansza[i][j-2]==1){
                                        if(j-3>=0 && Plansza[i][j-3]==1){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                                                        
                                if(j-1>=0 && Plansza[i][j-1]==2){
                                    if(j-2>=0 && Plansza[i][j-2]==2){
                                        if(j-3>=0 && Plansza[i][j-3]==2){
                                            Score-=2;}
                                        Score-=15;}
                                    Score-=2;}
                                 
                                 
                                if(i-1>=0 && Plansza[i-1][j]==2){
                                    Score-=2;
                                    if(i-2>=0 && Plansza[i-2][j]==2){
                                        if(i-3>=0 && Plansza[i-3][j]==2){
                                            Score-=2;}
                                        Score-=15;}}
                                                            
                                if(i+1<=Rozmiar-1 && Plansza[i+1][j]==2){
                                    if(i+2<=Rozmiar-1 && Plansza[i+2][j]==2){
                                        if(i+3<=Rozmiar-1 && Plansza[i+3][j]==2){
                                            Score-=2;}
                                        Score-=15;}
                                    Score-=2;}
                                
                                if(j+1<=Rozmiar-1 && Plansza[i][j+1]==2){
                                    if(j+2<=Rozmiar-1 && Plansza[i][j+2]==2){
                                        if(j+3<=Rozmiar-1 && Plansza[i][j+3]==2){{
                                            Score-=2;} Score-=15;}
                                    Score-=2;}}
                                
                                System.out.println("( " + a + ", " + b + " )" + Score);
                                Plansza[a][b]=0;
                            }
                            
                        }
                        
                    }
                    if(Score<NajWez.Wynik)
                    {
                        NajWez.Wynik=Score;
                        NajWez.x=i;
                        NajWez.y=j;
                        Wezly.add(NajWez);
                    }
                    System.out.println("Score: "+ Score);
                    Wartosci.add(Score);
                    Score=0;
                    Plansza[i][j]=0;
                   // break;
                }
                }
                
                
                
                
                
                else{
                if(Plansza[i][j]==0){
                   // Plansza[i][j]=2;
                    for(int a=0; a<Rozmiar; a++)  {
                        for(int b=0; b<Rozmiar; b++){
                            if(Plansza[a][b]==0){
                   //             Plansza[a][b]=1;
                                
                              
                                if(a-1>=0&&Plansza[a-1][b]==0) {
                                        Score++;
                                        if(a-2>=0&&Plansza[a-2][b]==0)  {
                                            Score+=2; }}
                                
                                if(b-1>=0 && Plansza[a][b-1]==0) {
                                    Score++;
                                    if(b-2>=0 && Plansza[a][b-2]==0) {
                                        Score+=2; } }
                                
                                if(a+1<=Rozmiar-1 && Plansza[a+1][b]==0){
                                    Score++;
                                    if(b+2<=Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2; }}
                        
                                if(b+1<=Rozmiar-1 && Plansza[a][b+1]==0){
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}
                                    Score++; }
                                
                                if(a-1>=0&&Plansza[a-1][b]==1){
                                    Score+=5;
                                    if(a-2>=0&&Plansza[a-2][b]==0) {
                                        Score+=2;}}
                                
                                if(b-1>=0 && Plansza[a][b-1]==2){
                                    Score+=5;
                                    if(b-2>=0 && Plansza[a][b-2]==0){
                                        Score+=2;} }
                                
                                if(a+1<=Rozmiar-1 && Plansza[a+1][b]==1){
                                    Score+=5;
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0) {
                                        Score+=2; } }
                        
                                if(b+1<=Rozmiar-1 && Plansza[a][b+1]==2){
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}
                                    Score+=5;}
                                
                                if(i-1>=0 && Plansza[i-1][j]==2) {
                                    Score-=6;
                                    if(i-2>=0 && Plansza[i-2][j]==2){
                                        if(i-3>=0 && Plansza[i-3][j]==2){
                                        Score-=15;}
                                    Score-=16;}}
                                
                                if(j-1>=0 && Plansza[i][j-1]==2){
                                    if(j-2>=0 && Plansza[i][j-2]==2){
                                        if(j-3>=0 && Plansza[i][j-3]==2){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                
                                if(i+1<=Rozmiar-1 && Plansza[i+1][j]==2){
                                    if(i+2<=Rozmiar-1 && Plansza[i+2][j]==2){
                                        if(i+3<=Rozmiar-1 && Plansza[i+3][j]==2){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                 
                                if(j+1<=Rozmiar-1 && Plansza[i][j+1]==2){
                                    if(j+2<=Rozmiar-1 && Plansza[i][j+2]==2){
                                        if(j+3<=Rozmiar-1 && Plansza[i][j+3]==2){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                
                                 if(j-1>=0 && Plansza[i][j-1]==2){
                                    if(j-2>=0 && Plansza[i][j-2]==2){
                                        if(j-3>=0 && Plansza[i][j-3]==2){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                                                        
                                if(j-1>=0 && Plansza[i][j-1]==1){
                                    if(j-2>=0 && Plansza[i][j-2]==1){
                                        if(j-3>=0 && Plansza[i][j-3]==1){
                                            Score-=2;}
                                        Score-=15;}
                                    Score-=2;}
                                 
                                if(i-1>=0 && Plansza[i-1][j]==1){
                                    Score-=2;
                                    if(i-2>=0 && Plansza[i-2][j]==1){
                                        if(i-3>=0 && Plansza[i-3][j]==1){
                                            Score-=2;}
                                        Score-=15;}}
                                                            
                                if(i+1<=Rozmiar-1 && Plansza[i+1][j]==1){
                                    if(i+2<=Rozmiar-1 && Plansza[i+2][j]==1){
                                        if(i+3<=Rozmiar-1 && Plansza[i+3][j]==1){
                                            Score-=2;}
                                        Score-=15;}
                                    Score-=2;}
                                
                                if(j+1<=Rozmiar-1 && Plansza[i][j+1]==1){
                                    if(j+2<=Rozmiar-1 && Plansza[i][j+2]==1){
                                        if(j+3<=Rozmiar-1 && Plansza[i][j+3]==1){{
                                            Score-=2;}Score-=15;}
                                    Score-=2;}}
                                
                                System.out.println("( " + a + ", " + b + " )" + Score);
                                Plansza[a][b]=0;
                            }
                            
                        }
                        
                    }
                    if(Score<NajWez.Wynik)
                    {
                        NajWez.Wynik=Score;
                        NajWez.x=i;
                        NajWez.y=j;
                        Wezly.add(NajWez);
                    }
                    System.out.println("Score: "+ Score);
                    Wartosci.add(Score);
                    Score=0;
                    Plansza[i][j]=0;
                   // break;
                }
            }
            }
            //if(FindSpace==true){FindSpace=false;break;}
        } 
        }
        
        //Obrona
        else{
        for(int i=0; i<Rozmiar; i++){
            for(int j=0; j<Rozmiar; j++){
                if ( (j<7 && 
                        ( Plansza[i][j]==0&&   Plansza[i][j+1]==2 && Plansza[i][j+2]==2 && Plansza[i][j+3]==2)) || //_###
                     (i<7 &&
                        (Plansza[i][j]==0 && Plansza[i+1][j]==2 && Plansza[i+2][j]==2 && Plansza[i+3][j]==2)) ||
                        
                     (j<7 &&  
                        (Plansza[i][j]==2 && Plansza[i][j+1]==2 && Plansza[i][j+2]==2 && Plansza[i][j+3]==0)) || //###_   
                     (i<7 &&
                        (Plansza[i][j]==2 && Plansza[i+1][j]==2 && Plansza[i+2][j]==2 && Plansza[i+3][j]==0)) || 
                        
                        
                     (j<7 && 
                        (Plansza[i][j]==2 && Plansza[i][j+1]==0 && Plansza[i][j+2]==2 && Plansza[i][j+3]==2)) || //#_##
                        
                     (i<7 &&
                        (Plansza[i][j]==2 && Plansza[i+1][j]==0 && Plansza[i+2][j]==2 && Plansza[i+3][j]==2)) ||    

                     (j<7 && 
                        (Plansza[i][j]==2 && Plansza[i][j+1]==2 && Plansza[i][j+2]==0 && Plansza[i][j+3]==2)) || //##_#
                        
                     (i<7 &&
                        (Plansza[i][j]==2 && Plansza[i+1][j]==2 && Plansza[i+2][j]==0 && Plansza[i+3][j]==2)))
                {
                     if(Plansza[i][j]==0){
                   // Plansza[i][j]=2;
                    for(int a=0; a<Rozmiar; a++)  {
                        for(int b=0; b<Rozmiar; b++){
                            if(Plansza[a][b]==0){
                   //             Plansza[a][b]=1;
                                
                              
                                if(a-1>=0&&Plansza[a-1][b]==0) {
                                        Score++;
                                        if(a-2>=0&&Plansza[a-2][b]==0)  {
                                            Score+=2; }}
                                
                                if(b-1>=0 && Plansza[a][b-1]==0) {
                                    Score++;
                                    if(b-2>=0 && Plansza[a][b-2]==0) {
                                        Score+=2; } }
                                
                                if(a+1<=Rozmiar-1 && Plansza[a+1][b]==0){
                                    Score++;
                                    if(b+2<=Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2; }}
                        
                                if(b+1<=Rozmiar-1 && Plansza[a][b+1]==0){
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}
                                    Score++; }
                                
                                if(a-1>=0&&Plansza[a-1][b]==1){
                                    Score+=5;
                                    if(a-2>=0&&Plansza[a-2][b]==0) {
                                        Score+=2;}}
                                
                                if(b-1>=0 && Plansza[a][b-1]==2){
                                    Score+=5;
                                    if(b-2>=0 && Plansza[a][b-2]==0){
                                        Score+=2;} }
                                
                                if(a+1<=Rozmiar-1 && Plansza[a+1][b]==1){
                                    Score+=5;
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0) {
                                        Score+=2; } }
                        
                                if(b+1<=Rozmiar-1 && Plansza[a][b+1]==2){
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}
                                    Score+=5;}
                                
                                if(i-1>=0 && Plansza[i-1][j]==2) {
                                    Score-=6;
                                    if(i-2>=0 && Plansza[i-2][j]==2){
                                        if(i-3>=0 && Plansza[i-3][j]==2){
                                        Score-=15;}
                                    Score-=16;}}
                                
                                if(j-1>=0 && Plansza[i][j-1]==2){
                                    if(j-2>=0 && Plansza[i][j-2]==2){
                                        if(j-3>=0 && Plansza[i][j-3]==2){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                
                                if(i+1<=Rozmiar-1 && Plansza[i+1][j]==2){
                                    if(i+2<=Rozmiar-1 && Plansza[i+2][j]==2){
                                        if(i+3<=Rozmiar-1 && Plansza[i+3][j]==2){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                 
                                if(j+1<=Rozmiar-1 && Plansza[i][j+1]==2){
                                    if(j+2<=Rozmiar-1 && Plansza[i][j+2]==2){
                                        if(j+3<=Rozmiar-1 && Plansza[i][j+3]==2){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                
                                 if(j-1>=0 && Plansza[i][j-1]==2){
                                    if(j-2>=0 && Plansza[i][j-2]==2){
                                        if(j-3>=0 && Plansza[i][j-3]==2){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                                                        
                                if(j-1>=0 && Plansza[i][j-1]==1){
                                    if(j-2>=0 && Plansza[i][j-2]==1){
                                        if(j-3>=0 && Plansza[i][j-3]==1){
                                            Score-=2;}
                                        Score-=15;}
                                    Score-=2;}
                                 
                                if(i-1>=0 && Plansza[i-1][j]==1){
                                    Score-=2;
                                    if(i-2>=0 && Plansza[i-2][j]==1){
                                        if(i-3>=0 && Plansza[i-3][j]==1){
                                            Score-=2;}
                                        Score-=15;}}
                                                            
                                if(i+1<=Rozmiar-1 && Plansza[i+1][j]==1){
                                    if(i+2<=Rozmiar-1 && Plansza[i+2][j]==1){
                                        if(i+3<=Rozmiar-1 && Plansza[i+3][j]==1){
                                            Score-=2;}
                                        Score-=15;}
                                    Score-=2;}
                                
                                if(j+1<=Rozmiar-1 && Plansza[i][j+1]==1){
                                    if(j+2<=Rozmiar-1 && Plansza[i][j+2]==1){
                                        if(j+3<=Rozmiar-1 && Plansza[i][j+3]==1){{
                                            Score-=2;}Score-=15;}
                                    Score-=2;}}
                                
                                System.out.println("( " + a + ", " + b + " )" + Score);
                                Plansza[a][b]=0;
                            }
                            
                        }
                        
                    }
                    if(Score<NajWez.Wynik)
                    {
                        NajWez.Wynik=Score;
                        NajWez.x=i;
                        NajWez.y=j;
                        Wezly.add(NajWez);
                    }
                    System.out.println("Score: "+ Score);
                    Wartosci.add(Score);
                    Score=0;
                    Plansza[i][j]=0;
                   // break;
                }
                
                
                }
                
         
                
       else {
                   // Plansza[2][2]=2;
     //   for(int i=0; i<Rozmiar; i++){
       //     for(int j=0; j<Rozmiar; j++){
                if(Plansza[i][j]==0){
                   // Plansza[i][j]=2;
                    
                    for(int a=0; a<Rozmiar; a++){
                        for(int b=0; b<Rozmiar; b++){
                            if(Plansza[a][b]==0){
                   //             Plansza[a][b]=1;
                                
                              
                                if(a-1>=0&&Plansza[a-1][b]==0){
                                    Score++;
                                    if(a-2>=0&&Plansza[a-2][b]==0){
                                        Score+=2;}}
                                
                                if(b-1>=0 && Plansza[a][b-1]==0){
                                    Score++;
                                    if(b-2>=0 && Plansza[a][b-2]==0){
                                        Score+=2;}}
                                
                                if(a+1<=Rozmiar-1 && Plansza[a+1][b]==0){
                                    Score++;
                                    if(b+2<=Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}}
                        
                                if(b+1<=Rozmiar-1 && Plansza[a][b+1]==0){
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}
                                    Score++;}
                                                                
                                if(a-1>=0&&Plansza[a-1][b]==1){
                                    Score+=5;
                                    if(a-2>=0&&Plansza[a-2][b]==0){
                                        Score+=2;}}
                                
                                if(b-1>=0 && Plansza[a][b-1]==1){
                                    Score+=5;
                                    if(b-2>=0 && Plansza[a][b-2]==0){
                                        Score+=2;}}
                                
                                if(a+1<=Rozmiar-1 && Plansza[a+1][b]==1){
                                    Score+=5;
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}}
                        
                                if(b+1<=Rozmiar-1 && Plansza[a][b+1]==1){
                                    if(b+2<Rozmiar-1 && Plansza[a][b+2]==0){
                                        Score+=2;}
                                    Score+=5;}
                                
                                if(i-1>=0 && Plansza[i-1][j]==1){
                                    Score-=6;
                                    if(i-2>=0 && Plansza[i-2][j]==1){
                                        if(i-3>=0 && Plansza[i-3][j]==1){
                                            Score-=15;}
                                        Score-=16;}}
                                
                                if(j-1>=0 && Plansza[i][j-1]==1){
                                    if(j-2>=0 && Plansza[i][j-2]==1){
                                        if(j-3>=0 && Plansza[i][j-3]==1){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                
                                if(i+1<=Rozmiar-1 && Plansza[i+1][j]==1){
                                    if(i+2<=Rozmiar-1 && Plansza[i+2][j]==1){
                                        if(i+3<=Rozmiar-1 && Plansza[i+3][j]==1){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                 
                                if(j+1<=Rozmiar-1 && Plansza[i][j+1]==1){
                                    if(j+2<=Rozmiar-1 && Plansza[i][j+2]==1){
                                        if(j+3<=Rozmiar-1 && Plansza[i][j+3]==1){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                
                                if(j-1>=0 && Plansza[i][j-1]==1){
                                    if(j-2>=0 && Plansza[i][j-2]==1){
                                        if(j-3>=0 && Plansza[i][j-3]==1){
                                            Score-=15;}
                                        Score-=16;}
                                    Score-=6;}
                                                                        
                                if(j-1>=0 && Plansza[i][j-1]==2){
                                    if(j-2>=0 && Plansza[i][j-2]==2){
                                        if(j-3>=0 && Plansza[i][j-3]==2){
                                            Score-=2;}
                                        Score-=15;}
                                    Score-=2;}
                                 
                                 
                                if(i-1>=0 && Plansza[i-1][j]==2){
                                    Score-=2;
                                    if(i-2>=0 && Plansza[i-2][j]==2){
                                        if(i-3>=0 && Plansza[i-3][j]==2){
                                            Score-=2;}
                                        Score-=15;}}
                                                            
                                if(i+1<=Rozmiar-1 && Plansza[i+1][j]==2){
                                    if(i+2<=Rozmiar-1 && Plansza[i+2][j]==2){
                                        if(i+3<=Rozmiar-1 && Plansza[i+3][j]==2){
                                            Score-=2;}
                                        Score-=15;}
                                    Score-=2;}
                                
                                if(j+1<=Rozmiar-1 && Plansza[i][j+1]==2){
                                    if(j+2<=Rozmiar-1 && Plansza[i][j+2]==2){
                                        if(j+3<=Rozmiar-1 && Plansza[i][j+3]==2){{
                                            Score-=2;} Score-=15;}
                                    Score-=2;}}
                                
                                System.out.println("( " + a + ", " + b + " )" + Score);
                                Plansza[a][b]=0;
                            }
                            
                        }
                        
                    }
                    if(Score<NajWez.Wynik)
                    {
                        NajWez.Wynik=Score;
                        NajWez.x=i;
                        NajWez.y=j;
                        Wezly.add(NajWez);
                    }
                    System.out.println("Score: "+ Score);
                    Wartosci.add(Score);
                    Score=0;
                    Plansza[i][j]=0;
                   // break;
                }
            }
            //if(FindSpace==true){FindSpace=false;break;}
        }
        }
            }
   //     }
     //   }
        
        
        
        System.out.println("**************************************");
               //System.out.println("**************************************");
        for(int i=0; i<Wartosci.size();i++)
        {
            System.out.print(Wartosci.get(i) + ", ");
            
        }
        System.out.println("**************************************");
        System.out.println("**************************************");
        for(int i=0; i<Wezly.size()-1; i++)
        {
            if(Wezly.get(i).Wynik > Wezly.get(i+1).Wynik && Wezly.size()>=i){
                
            
                NajWez = Wezly.get(i);
            }
        }
        Wezly.retainAll(Wezly);
        System.out.println(NajWez.Wynik);
        Plansza[NajWez.x][NajWez.y]=2;
        NajWez.Wynik=10000;
        panel.uaktualnijObraz(Plansza);
        panel.repaint();
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AI_KK_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AI_KK_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AI_KK_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AI_KK_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AI_KK_GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_ruch;
    private javax.swing.JCheckBox cb_tryb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jP1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rb_komp;
    private javax.swing.JRadioButton rb_user;
    private javax.swing.ButtonGroup rbg;
    // End of variables declaration//GEN-END:variables
}

class Wezel{
   public int x;
   public int y;
   public int Wynik=1000;
};
class MP extends JPanel{
    
    int[][] P;
    int R=10;
    
    MP(int r){
        P = new int[R][R];
    }
    
    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        rysujPlansze(g);
        zaznaczPola(g);
    }
    
    private void rysujPlansze(Graphics g){
        int dx = this.getWidth()/R;
        int dy = this.getHeight()/R;
        for(int i=0; i<R; i++)
            for(int j=0; j<R; j++)
                g.drawRect(j*dx, i*dy, dx, dy);
    }
    
    private void zaznaczPola(Graphics g){
        int dx = this.getWidth()/R;
        int dy = this.getHeight()/R;
        for(int i=0; i<R; i++)
            for(int j=0; j<R; j++){
                if(P[i][j]==1 ) {
                    g.setColor(Color.yellow);
                    g.fillRect(j*dx, i*dy, dx, dy);
                }
                else if(P[i][j]==2) {
                    g.setColor(Color.blue);
                    g.fillRect(j*dx, i*dy, dx, dy);
                }
            }
        
    }

    void uaktualnijObraz(int[][] Plansza) {
        for(int i=0; i<R; i++)
            for(int j=0; j<R; j++)
                P[i][j] = Plansza[i][j];
    }
    
    
}

